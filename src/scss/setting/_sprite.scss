/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$arrow-next-name: 'arrow--next';
$arrow-next-x: 104px;
$arrow-next-y: 0px;
$arrow-next-offset-x: -104px;
$arrow-next-offset-y: 0px;
$arrow-next-width: 56px;
$arrow-next-height: 56px;
$arrow-next-total-width: 216px;
$arrow-next-total-height: 110px;
$arrow-next-image: '../img/sprite.png';
$arrow-next: (104px, 0px, -104px, 0px, 56px, 56px, 216px, 110px, '../img/sprite.png', 'arrow--next', );
$arrow-prev-name: 'arrow--prev';
$arrow-prev-x: 160px;
$arrow-prev-y: 0px;
$arrow-prev-offset-x: -160px;
$arrow-prev-offset-y: 0px;
$arrow-prev-width: 56px;
$arrow-prev-height: 56px;
$arrow-prev-total-width: 216px;
$arrow-prev-total-height: 110px;
$arrow-prev-image: '../img/sprite.png';
$arrow-prev: (160px, 0px, -160px, 0px, 56px, 56px, 216px, 110px, '../img/sprite.png', 'arrow--prev', );
$research-name: 'research';
$research-x: 0px;
$research-y: 0px;
$research-offset-x: 0px;
$research-offset-y: 0px;
$research-width: 104px;
$research-height: 110px;
$research-total-width: 216px;
$research-total-height: 110px;
$research-image: '../img/sprite.png';
$research: (0px, 0px, 0px, 0px, 104px, 110px, 216px, 110px, '../img/sprite.png', 'research', );
$yen-name: 'yen';
$yen-x: 160px;
$yen-y: 56px;
$yen-offset-x: -160px;
$yen-offset-y: -56px;
$yen-width: 24px;
$yen-height: 24px;
$yen-total-width: 216px;
$yen-total-height: 110px;
$yen-image: '../img/sprite.png';
$yen: (160px, 56px, -160px, -56px, 24px, 24px, 216px, 110px, '../img/sprite.png', 'yen', );
$spritesheet-width: 216px;
$spritesheet-height: 110px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($arrow-next, $arrow-prev, $research, $yen, );
$spritesheet: (216px, 110px, '../img/sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
